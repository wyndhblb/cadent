##
##  LevelDB-Log-Series ONLY writer
##
##
##  NOTE: this is useful for a "local only" data store, the levelDB cannot do "triggger rollups"
##  and only "one" resolution (the first) is stored
##
##  NOTE: the `backend = "BLACKHOLE"` below, this implys the Lines stop at the writer
##
##  cadent --config=graphite-config.toml --prereg=graphite-leveldb-log-series.toml
##
##

[statsd-proxy-map]
listen_server="statsd-proxy" # which listener to sit in front of  (must be in the main config)
default_backend="graphite-proxy"  # failing a match go here

    [statsd-proxy-map.accumulator]
    backend = "graphite-proxy"  # farm to relay
    input_format = "statsd"
    output_format = "graphite"
    accumulate_flush = "10s"
    options = [
            ["legacyNamespace", "true"],
            ["prefixGauge", "gauges"],
            ["prefixTimer", "timers"],
            ["prefixSets", "sets"],
            ["prefixCounter", ""],
            ["globalPrefix", "stats"],
            ["globalSuffix", ""],
            ["percentThreshold", "0.90,0.95,0.99"]
    ]

[graphite-proxy-map]
listen_server="graphite-proxy" # which listener to sit in front of  (must be in the main config)
default_backend="graphite-proxy"  # failing a match go here

    [graphite-proxy-map.accumulator]
    backend = "BLACKHOLE"
    input_format = "graphite"
    output_format = "graphite"
    random_ticker_start = false

    # aggregate bin counts
    accumulate_flush = "1s"
    times = ["1s:24h"]

    # cache objects to be shared (or not) across the writer backends
    [[graphite-proxy-map.accumulator.writer.caches]]
        name="gorilla"
        series_encoding="gorilla"
        bytes_per_metric=256
        max_metrics=1024000  # for 1 million points @ 1024 b you'll need lots o ram


    # AND write things to the cassandra DB
    # cassandra api, metrics writer and path indexer
    [graphite-proxy-map.accumulator.writer.metrics]
        name="level-metrics"
        driver = "leveldb-log"
        dsn = "/tmp/graphite/metrics"
        cache="gorilla"
        [graphite-proxy-map.accumulator.writer.metrics.options]
            cache_time_window = 10 # time in min for the chunk windows
            cache_num_chunks = 6 # number of chunks to be in ram
            cache_log_flush_time = 10 # number of seconds for each log flush (best if it matches the `accumulate_flush` window (if large) or a multiple of it

    [graphite-proxy-map.accumulator.writer.indexer]
        name="level-indexer"
        driver = "leveldb"
        dsn = "/tmp/graphite/index"


    [graphite-proxy-map.accumulator.api]
        base_path = "/graphite/"
        listen = "0.0.0.0:8083"
        # enable GZIP output compression:
        # for large request rates (100-200TPS), gzip can cause ALOT of GC, the default is OFF
        # if your volume is lowish you should enable this, probably should not enable if
        # you are using msgpack/protobufs as the format for returns
        enable_gzip = false

        #  TLS the server if desired
        # key="/path/to/server.key"
        # cert="/path/to/server.crt"

        use_metrics="level-metrics"
        use_indexer="level-indexer"


    # Sub string type match
    [[graphite-proxy-map.map]]
        substring=".marvel"  # ignore elastic search marvel stuff
        reject=true