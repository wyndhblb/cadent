##
##  Cassandra-Log-Series
##   - a triggered + log cassandra writer backend
##
##  note the `backend = "BLACKHOLE"` below, this implies the Lines stop at the writer
##
##  cadent --config=graphite-config.toml --prereg=graphite-cassandra-log-series.toml
##
##

[graphite-proxy-map]
listen_server="graphite-proxy" # which listener to sit in front of  (must be in the main config)
default_backend="graphite-proxy"  # failing a match go here

    [graphite-proxy-map.accumulator]
    backend = "BLACKHOLE"
    input_format = "graphite"
    output_format = "graphite"
    random_ticker_start = false

    # if bypass is TRUE, then NO accumulation will happen, and things
    # will get directly sent "asis" to the Writers
    # this is a "bad idea" for absurd throughput (i.e. a statsd like client)
    bypass=true

    # this can get really noisy for bad inputs of bad lines, so just skip the log warning
    show_line_errors=false

    # aggregate bin counts
    accumulate_flush = "1s"
    times = ["1s:10m", "5s:1h", "10s:3h", "1m:12h"]
    #times = ["1s:10m", "1m:12h"]
    #times = ["1s:2h", "10s:720h", "1m:2160h"]

    # cache objects to be shared (or not) across the writer backends
    [[graphite-proxy-map.accumulator.writer.caches]]
        name="gorilla"
        series_encoding="gorilla"
        bytes_per_metric=256
        max_metrics=1024000  # for 1 million points @ 1024 b you'll need lots o ram


    # AND write things to the cassandra DB
    # cassandra api, metrics writer and path indexer
    [graphite-proxy-map.accumulator.writer.metrics]
        driver = "cassandra-log-triggered"
        dsn = "localhost"
        cache="gorilla"
        name="cass-metrics"

        [graphite-proxy-map.accumulator.writer.metrics.options]
            write_consistency = "local_quorum"
            port=9042
            keyspace="metric"
            metrics_table="metric_series"
            writer_index=1 # if you have multiple writers you'll need to have UNIQUE ids for them
            sniff=false # do this if you don't want the auto-detection of the cluster nodes (i.e. in a dev env as it can be slow)
            cache_time_window = 1 # time in min for the chunk windows
            cache_num_chunks = 2 # number of chunks to be in ram
            cache_log_flush_time = 10 # number of seconds for each log flush (best if it matches the `accumulate_flush` window (if large) or a multiple of it

            ## some rollup options
            rollup_workers=8
            rollup_retries=2
            rollup_queue_length=128  # size before we start to block things
            rollup_byte_size=1024
            rollup_method="queue"  # for large number of unique keys/metrics "queue" is the best method
            rollup_queue_workers=4


    [graphite-proxy-map.accumulator.writer.indexer]
        driver = "cassandra"
        dsn = "localhost"
        name="cass-indexer"

        [graphite-proxy-map.accumulator.writer.indexer.options]
            # assign things written to by this node as the "master" writer
            # if you have multiple writers you'll need to have UNIQUE ids for them
            writer_index=1
            local_index_dir="/tmp/cadent_index"
            writes_per_second=100
            port=9042
            metrics_table="metric_series"
            keyspace="metric"
            path_table="path"
            segment_table="segment"
            sniff=false

    # good old TCP api [GETM ... FINDM ... GETC ... HELP ... PING ... EXIT]
    [graphite-proxy-map.accumulator.tcpapi]
        listen = "0.0.0.0:8084"
        max_clients=4096  # max clients allowed
        num_workers=16  # max things that can be running at any given time

        # if wanting a TLS tcp cserver
        # key = /path/to/key
        # cert = /path/to/cert

        use_metrics="cass-metrics"
        use_indexer="cass-indexer"


    # HTTP interface API
    [graphite-proxy-map.accumulator.api]
        base_path = "/graphite/"
        listen = "0.0.0.0:8083"
        grpc_listen = "0.0.0.0:9089"
        tags = "zone=local,dc=myland,mode=test"
        advertise_name="localhost"
        advertise_url="http://localhost:8083/graphite/"

        # enable GZIP output compression:
        # for large request rates (100-200TPS), gzip can cause ALOT of GC, the default is OFF
        # if your volume is lowish you should enable this, probably should not enable if
        # you are using msgpack/protobufs as the format for returns
        enable_gzip = false

        #  TLS the server if desired
        # key="/path/to/server.key"
        # cert="/path/to/server.crt"

        use_metrics="cass-metrics"
        use_indexer="cass-indexer"

        #[graphite-proxy-map.accumulator.api.discover]
        #    driver="zookeeper"
        #    dsn="127.0.0.1:2181"


    # Sub string type match
    [[graphite-proxy-map.map]]
        substring=".marvel"  # ignore elastic search marvel stuff
        reject=true